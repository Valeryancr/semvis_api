spring:
  application:
    name: semvis-api
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:dev}

  jackson:
    time-zone: America/Guatemala
  mvc:
    time-zone: America/Guatemala
  main:
    time-zone: America/Guatemala

  jpa:
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        default_schema: ${DB_SCHEMA:semvis_sk}
        jdbc.time_zone: America/Guatemala
        format_sql: true

  flyway:
    enabled: true
    default-schema: ${DB_SCHEMA:semvis_sk}
    schemas: ${DB_SCHEMA:semvis_sk}
    locations: classpath:db/migration
    baseline-on-migrate: true
    validate-on-migrate: true

management:
  endpoints:
    web:
      exposure:
        include: health,info,flyway
  info:
    env:
      enabled: true

server:
  port: ${PORT:8080}
  servlet:
    context-path: /api

info:
  app:
    name: SemVis API
    version: 1.0.0
    description: API REST del proyecto SemVis - SkyNet S.A.

app:
  security:
    jwtSecret: ${JWT_SECRET:CHANGE_THIS_TO_A_SECURE_SECRET_KEY_IN_PRODUCTION}
    jwtExpirationMinutes: ${JWT_EXP_MINUTES:120}
    cors:
      allowedOrigins: ${CORS_ALLOWED_ORIGINS:http://localhost:4200,http://127.0.0.1:4200}

  email:
    brevo:
      api-key: ${BREVO_API_KEY}
      sender-name: ${BREVO_SENDER_NAME:SkyNet S.A.}
      sender-email: ${BREVO_SENDER_EMAIL:no-reply@semvis-skynet.com}
    reset-link:
      base-url: ${RESET_LINK_BASE_URL:http://localhost:4200/auth/reset-password}
    login:
      base-url: ${LOGIN_BASE_URL:http://localhost:4200/auth/login}

  report:
    base-url: ${REPORT_BASE_URL:http://localhost:8080/api/reportes/open/secure?token=}

logging:
  level:
    root: INFO
    org.hibernate.SQL: ${LOG_SQL:false}
    org.hibernate.orm.jdbc.bind: ${LOG_SQL_BIND:false}
    org.springframework.security: ${LOG_SECURITY:false}
    gt.skynet.semvis.config.RequestTimingFilter: INFO
    org.springframework.security.web.FilterChainProxy: INFO
    org.flywaydb: INFO
  pattern:
    console: "%d{HH:mm:ss.SSS} %-5level - %msg%n"

---

spring:
  config:
    activate:
      on-profile: dev
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/seminario}
    username: ${SPRING_DATASOURCE_USERNAME:seminario}
    password: ${SPRING_DATASOURCE_PASSWORD:seminario}
    hikari:
      maximum-pool-size: ${DB_POOL_MAX:10}
      minimum-idle: ${DB_POOL_MIN:2}
      idle-timeout: ${DB_IDLE_MS:60000}
      connection-timeout: ${DB_CONN_TIMEOUT_MS:30000}

logging:
  level:
    org.springframework.web: INFO

---
spring:
  config:
    activate:
      on-profile: prod
  datasource:
    url: ${SPRING_DATASOURCE_URL}
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}
    hikari:
      maximum-pool-size: ${DB_POOL_MAX}
      minimum-idle: ${DB_POOL_MIN}
      idle-timeout: ${DB_IDLE_MS}
      connection-timeout: ${DB_CONN_TIMEOUT_MS}

logging:
  level:
    root: INFO
    org.springframework: INFO
    org.hibernate: WARN
    org.springframework.web: WARN
